{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = HeaderContainer;\nvar _elements = require(\"@react-navigation/elements\");\nvar _native = require(\"@react-navigation/native\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _Animated = _interopRequireDefault(require(\"react-native-web/dist/exports/Animated\"));\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\nvar _HeaderStyleInterpolators = require(\"../../TransitionConfigs/HeaderStyleInterpolators\");\nvar _Header = _interopRequireDefault(require(\"./Header\"));\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction HeaderContainer(_ref) {\n  var mode = _ref.mode,\n    scenes = _ref.scenes,\n    layout = _ref.layout,\n    getPreviousScene = _ref.getPreviousScene,\n    getFocusedRoute = _ref.getFocusedRoute,\n    onContentHeightChange = _ref.onContentHeightChange,\n    style = _ref.style;\n  var focusedRoute = getFocusedRoute();\n  var parentHeaderBack = React.useContext(_elements.HeaderBackContext);\n  return React.createElement(_Animated.default.View, {\n    pointerEvents: \"box-none\",\n    style: style\n  }, scenes.slice(-3).map(function (scene, i, self) {\n    var _self, _self2;\n    if (mode === 'screen' && i !== self.length - 1 || !scene) {\n      return null;\n    }\n    var _scene$descriptor$opt = scene.descriptor.options,\n      header = _scene$descriptor$opt.header,\n      headerMode = _scene$descriptor$opt.headerMode,\n      _scene$descriptor$opt2 = _scene$descriptor$opt.headerShown,\n      headerShown = _scene$descriptor$opt2 === void 0 ? true : _scene$descriptor$opt2,\n      headerTransparent = _scene$descriptor$opt.headerTransparent,\n      headerStyleInterpolator = _scene$descriptor$opt.headerStyleInterpolator;\n    if (headerMode !== mode || !headerShown) {\n      return null;\n    }\n    var isFocused = focusedRoute.key === scene.descriptor.route.key;\n    var previousScene = getPreviousScene({\n      route: scene.descriptor.route\n    });\n    var headerBack = parentHeaderBack;\n    if (previousScene) {\n      var _previousScene$descri = previousScene.descriptor,\n        options = _previousScene$descri.options,\n        route = _previousScene$descri.route;\n      headerBack = previousScene ? {\n        title: (0, _elements.getHeaderTitle)(options, route.name)\n      } : parentHeaderBack;\n    }\n    var previousDescriptor = (_self = self[i - 1]) === null || _self === void 0 ? void 0 : _self.descriptor;\n    var nextDescriptor = (_self2 = self[i + 1]) === null || _self2 === void 0 ? void 0 : _self2.descriptor;\n    var _ref2 = (previousDescriptor === null || previousDescriptor === void 0 ? void 0 : previousDescriptor.options) || {},\n      _ref2$headerShown = _ref2.headerShown,\n      previousHeaderShown = _ref2$headerShown === void 0 ? true : _ref2$headerShown,\n      previousHeaderMode = _ref2.headerMode;\n    var nextHeaderlessScene = self.slice(i + 1).find(function (scene) {\n      var _ref3 = (scene === null || scene === void 0 ? void 0 : scene.descriptor.options) || {},\n        _ref3$headerShown = _ref3.headerShown,\n        currentHeaderShown = _ref3$headerShown === void 0 ? true : _ref3$headerShown,\n        currentHeaderMode = _ref3.headerMode;\n      return currentHeaderShown === false || currentHeaderMode === 'screen';\n    });\n    var _ref4 = (nextHeaderlessScene === null || nextHeaderlessScene === void 0 ? void 0 : nextHeaderlessScene.descriptor.options) || {},\n      nextHeaderlessGestureDirection = _ref4.gestureDirection;\n    var isHeaderStatic = (previousHeaderShown === false || previousHeaderMode === 'screen') && !nextDescriptor || nextHeaderlessScene;\n    var props = {\n      layout: layout,\n      back: headerBack,\n      progress: scene.progress,\n      options: scene.descriptor.options,\n      route: scene.descriptor.route,\n      navigation: scene.descriptor.navigation,\n      styleInterpolator: mode === 'float' ? isHeaderStatic ? nextHeaderlessGestureDirection === 'vertical' || nextHeaderlessGestureDirection === 'vertical-inverted' ? _HeaderStyleInterpolators.forSlideUp : nextHeaderlessGestureDirection === 'horizontal-inverted' ? _HeaderStyleInterpolators.forSlideRight : _HeaderStyleInterpolators.forSlideLeft : headerStyleInterpolator : _HeaderStyleInterpolators.forNoAnimation\n    };\n    return React.createElement(_native.NavigationContext.Provider, {\n      key: scene.descriptor.route.key,\n      value: scene.descriptor.navigation\n    }, React.createElement(_native.NavigationRouteContext.Provider, {\n      value: scene.descriptor.route\n    }, React.createElement(_View.default, {\n      onLayout: onContentHeightChange ? function (e) {\n        var height = e.nativeEvent.layout.height;\n        onContentHeightChange({\n          route: scene.descriptor.route,\n          height: height\n        });\n      } : undefined,\n      pointerEvents: isFocused ? 'box-none' : 'none',\n      accessibilityElementsHidden: !isFocused,\n      importantForAccessibility: isFocused ? 'auto' : 'no-hide-descendants',\n      style: mode === 'float' && !isFocused || headerTransparent ? styles.header : null\n    }, header !== undefined ? header(props) : React.createElement(_Header.default, props))));\n  }));\n}\nvar styles = _StyleSheet.default.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  }\n});","map":{"version":3,"names":["_elements","require","_native","React","_interopRequireWildcard","_Animated","_interopRequireDefault","_StyleSheet","_View","_HeaderStyleInterpolators","_Header","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","HeaderContainer","_ref","mode","scenes","layout","getPreviousScene","getFocusedRoute","onContentHeightChange","style","focusedRoute","parentHeaderBack","useContext","HeaderBackContext","createElement","Animated","View","pointerEvents","slice","map","scene","self","_self","_self2","length","_scene$descriptor$opt","descriptor","options","header","headerMode","_scene$descriptor$opt2","headerShown","headerTransparent","headerStyleInterpolator","isFocused","key","route","previousScene","headerBack","_previousScene$descri","title","getHeaderTitle","name","previousDescriptor","nextDescriptor","_ref2","_ref2$headerShown","previousHeaderShown","previousHeaderMode","nextHeaderlessScene","find","_ref3","_ref3$headerShown","currentHeaderShown","currentHeaderMode","_ref4","nextHeaderlessGestureDirection","gestureDirection","isHeaderStatic","props","back","progress","navigation","styleInterpolator","forSlideUp","forSlideRight","forSlideLeft","forNoAnimation","NavigationContext","Provider","value","NavigationRouteContext","onLayout","height","nativeEvent","undefined","accessibilityElementsHidden","importantForAccessibility","styles","Header","StyleSheet","create","position","top","left","right"],"sources":["C:\\Users\\jkvel\\OneDrive\\Documents\\Apps\\sana-mobile\\node_modules\\@react-navigation\\stack\\src\\views\\Header\\HeaderContainer.tsx"],"sourcesContent":["import { getHeaderTitle, HeaderBackContext } from '@react-navigation/elements';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  Route,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport {\n  forNoAnimation,\n  forSlideLeft,\n  forSlideRight,\n  forSlideUp,\n} from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport type {\n  Layout,\n  Scene,\n  StackHeaderMode,\n  StackHeaderProps,\n  StackNavigationProp,\n} from '../../types';\nimport Header from './Header';\n\nexport type Props = {\n  mode: StackHeaderMode;\n  layout: Layout;\n  scenes: (Scene | undefined)[];\n  getPreviousScene: (props: { route: Route<string> }) => Scene | undefined;\n  getFocusedRoute: () => Route<string>;\n  onContentHeightChange?: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\nexport default function HeaderContainer({\n  mode,\n  scenes,\n  layout,\n  getPreviousScene,\n  getFocusedRoute,\n  onContentHeightChange,\n  style,\n}: Props) {\n  const focusedRoute = getFocusedRoute();\n  const parentHeaderBack = React.useContext(HeaderBackContext);\n\n  return (\n    <Animated.View pointerEvents=\"box-none\" style={style}>\n      {scenes.slice(-3).map((scene, i, self) => {\n        if ((mode === 'screen' && i !== self.length - 1) || !scene) {\n          return null;\n        }\n\n        const {\n          header,\n          headerMode,\n          headerShown = true,\n          headerTransparent,\n          headerStyleInterpolator,\n        } = scene.descriptor.options;\n\n        if (headerMode !== mode || !headerShown) {\n          return null;\n        }\n\n        const isFocused = focusedRoute.key === scene.descriptor.route.key;\n        const previousScene = getPreviousScene({\n          route: scene.descriptor.route,\n        });\n\n        let headerBack = parentHeaderBack;\n\n        if (previousScene) {\n          const { options, route } = previousScene.descriptor;\n\n          headerBack = previousScene\n            ? { title: getHeaderTitle(options, route.name) }\n            : parentHeaderBack;\n        }\n\n        // If the screen is next to a headerless screen, we need to make the header appear static\n        // This makes the header look like it's moving with the screen\n        const previousDescriptor = self[i - 1]?.descriptor;\n        const nextDescriptor = self[i + 1]?.descriptor;\n\n        const {\n          headerShown: previousHeaderShown = true,\n          headerMode: previousHeaderMode,\n        } = previousDescriptor?.options || {};\n\n        // If any of the next screens don't have a header or header is part of the screen\n        // Then we need to move this header offscreen so that it doesn't cover it\n        const nextHeaderlessScene = self.slice(i + 1).find((scene) => {\n          const {\n            headerShown: currentHeaderShown = true,\n            headerMode: currentHeaderMode,\n          } = scene?.descriptor.options || {};\n\n          return currentHeaderShown === false || currentHeaderMode === 'screen';\n        });\n\n        const { gestureDirection: nextHeaderlessGestureDirection } =\n          nextHeaderlessScene?.descriptor.options || {};\n\n        const isHeaderStatic =\n          ((previousHeaderShown === false || previousHeaderMode === 'screen') &&\n            // We still need to animate when coming back from next scene\n            // A hacky way to check this is if the next scene exists\n            !nextDescriptor) ||\n          nextHeaderlessScene;\n\n        const props: StackHeaderProps = {\n          layout,\n          back: headerBack,\n          progress: scene.progress,\n          options: scene.descriptor.options,\n          route: scene.descriptor.route,\n          navigation: scene.descriptor\n            .navigation as StackNavigationProp<ParamListBase>,\n          styleInterpolator:\n            mode === 'float'\n              ? isHeaderStatic\n                ? nextHeaderlessGestureDirection === 'vertical' ||\n                  nextHeaderlessGestureDirection === 'vertical-inverted'\n                  ? forSlideUp\n                  : nextHeaderlessGestureDirection === 'horizontal-inverted'\n                  ? forSlideRight\n                  : forSlideLeft\n                : headerStyleInterpolator\n              : forNoAnimation,\n        };\n\n        return (\n          <NavigationContext.Provider\n            key={scene.descriptor.route.key}\n            value={scene.descriptor.navigation}\n          >\n            <NavigationRouteContext.Provider value={scene.descriptor.route}>\n              <View\n                onLayout={\n                  onContentHeightChange\n                    ? (e) => {\n                        const { height } = e.nativeEvent.layout;\n\n                        onContentHeightChange({\n                          route: scene.descriptor.route,\n                          height,\n                        });\n                      }\n                    : undefined\n                }\n                pointerEvents={isFocused ? 'box-none' : 'none'}\n                accessibilityElementsHidden={!isFocused}\n                importantForAccessibility={\n                  isFocused ? 'auto' : 'no-hide-descendants'\n                }\n                style={\n                  // Avoid positioning the focused header absolutely\n                  // Otherwise accessibility tools don't seem to be able to find it\n                  (mode === 'float' && !isFocused) || headerTransparent\n                    ? styles.header\n                    : null\n                }\n              >\n                {header !== undefined ? header(props) : <Header {...props} />}\n              </View>\n            </NavigationRouteContext.Provider>\n          </NavigationContext.Provider>\n        );\n      })}\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}