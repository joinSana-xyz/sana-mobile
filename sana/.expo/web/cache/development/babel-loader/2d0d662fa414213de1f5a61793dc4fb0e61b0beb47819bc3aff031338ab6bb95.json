{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Chat;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\nvar _Text = _interopRequireDefault(require(\"react-native-web/dist/exports/Text\"));\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\nvar _Button = _interopRequireDefault(require(\"react-native-web/dist/exports/Button\"));\nvar _TouchableOpacity = _interopRequireDefault(require(\"react-native-web/dist/exports/TouchableOpacity\"));\nvar _reactNativeGiftedChat = require(\"react-native-gifted-chat\");\nvar _firebase = require(\"../config/firebase\");\nvar _native = require(\"@react-navigation/native\");\nvar _reactNativeElements = require(\"react-native-elements\");\nvar _firestore = require(\"firebase/firestore\");\nvar _ReplyMessageBar = _interopRequireDefault(require(\"../components/ReplyMessageBar\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"/home/joshua/sana-app/sana/screens/Chat.js\";\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction Chat(_ref) {\n  var _route$params,\n    _this = this,\n    _auth$currentUser,\n    _auth$currentUser2;\n  var navigation = _ref.navigation;\n  var route = (0, _native.useRoute)();\n  var _useState = (0, _react.useState)([]),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = (0, _react.useState)([]),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    replyMessage = _useState4[0],\n    setReplyMessage = _useState4[1];\n  var _useState5 = (0, _react.useState)(false),\n    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n    showEmojiPicker = _useState6[0],\n    setShowEmojiPicker = _useState6[1];\n  var _useState7 = (0, _react.useState)(false),\n    _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n    ityping = _useState8[0],\n    setItyping = _useState8[1];\n  var _useState9 = (0, _react.useState)(false),\n    _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n    typing = _useState10[0],\n    setTyping = _useState10[1];\n  var clearReplyMessage = function clearReplyMessage() {\n    return setReplyMessage(null);\n  };\n  var cid = (_route$params = route.params) == null ? void 0 : _route$params.cid;\n  var typerRef = (0, _firestore.doc)(_firebase.database, \"chat\", cid);\n  var renderReplyMessageView = function renderReplyMessageView(props) {\n    if (typeof props.currentMessage.replyMessage == 'string') {\n      return (0, _jsxRuntime.jsxs)(_View.default, {\n        style: styles.replyMessageContainer,\n        children: [(0, _jsxRuntime.jsx)(_Text.default, {\n          children: props.currentMessage.replyMessage\n        }), (0, _jsxRuntime.jsx)(_View.default, {\n          style: styles.replyMessageDivider\n        })]\n      });\n    }\n  };\n  var renderAccessory = function renderAccessory() {\n    return (0, _jsxRuntime.jsx)(_ReplyMessageBar.default, {\n      message: {\n        text: replyMessage\n      },\n      clearReply: clearReplyMessage\n    });\n  };\n  (0, _react.useLayoutEffect)(function () {\n    var collectionRef = (0, _firestore.collection)(_firebase.database, \"chat\", cid, \"chat\");\n    var quer = (0, _firestore.query)(collectionRef, (0, _firestore.orderBy)('createdAt', 'desc'));\n    var unsubscribe = (0, _firestore.onSnapshot)(quer, function (snapshot) {\n      console.log('snapshot');\n      setMessages(snapshot.docs.map(function (doc) {\n        return {\n          _id: doc.id,\n          createdAt: doc.data().createdAt.toDate(),\n          text: doc.data().text,\n          user: doc.data().user,\n          replyMessage: doc.data().replyMessage\n        };\n      }));\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  useEffect(function () {\n    (0, _firestore.setDoc)(typerRef, {\n      typers: 0\n    });\n    console.log(\"laskjdf\");\n    var unsubscribe = (0, _firestore.onSnapshot)(typerRef, function (doc) {\n      setTyping(doc.data().typers - (ityping ? 1 : 0) > 0);\n      console.log(doc.data().typers + \" \" + ityping);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  var _onSend = (0, _react.useCallback)(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    if (replyMessage) {\n      messages[0].replyMessage = replyMessage;\n    }\n    setMessages(function (previousMessages) {\n      return _reactNativeGiftedChat.GiftedChat.append(previousMessages, messages);\n    });\n    var _messages$ = messages[0],\n      _id = _messages$._id,\n      createdAt = _messages$.createdAt,\n      text = _messages$.text,\n      user = _messages$.user;\n    (0, _firestore.addDoc)((0, _firestore.collection)(_firebase.database, 'chat', cid, \"chat\"), {\n      _id: _id,\n      createdAt: createdAt,\n      text: text,\n      user: user,\n      replyMessage: replyMessage\n    });\n    console.log(messages);\n  });\n  var renderSend = function renderSend(props) {\n    return (0, _jsxRuntime.jsxs)(_View.default, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [(0, _jsxRuntime.jsx)(_reactNativeGiftedChat.Send, Object.assign({}, props, {\n        children: (0, _jsxRuntime.jsx)(_View.default, {\n          style: styles.sendContainer,\n          children: (0, _jsxRuntime.jsx)(_reactNativeElements.Icon, {\n            type: \"font-awesome\",\n            name: \"send\",\n            size: 28,\n            color: \"orange\"\n          })\n        })\n      })), (0, _jsxRuntime.jsx)(_TouchableOpacity.default, {\n        onPress: function onPress() {\n          return setShowEmojiPicker(function (value) {\n            return value;\n          });\n        },\n        children: (0, _jsxRuntime.jsx)(_reactNativeElements.Icon, {\n          type: \"font-awesome\",\n          name: \"smile-o\",\n          size: 28,\n          color: \"gray\"\n        })\n      })]\n    });\n  };\n  var onPress = function onPress() {};\n  var notifyTyping = function notifyTyping(args) {\n    if (!ityping && args != \"\") {\n      setItyping(true);\n      (0, _firestore.updateDoc)(typerRef, {\n        typers: (0, _firestore.increment)(1)\n      });\n    } else if (ityping && args == \"\") {\n      setItyping(false);\n      (0, _firestore.updateDoc)(typerRef, {\n        typers: (0, _firestore.increment)(-1)\n      });\n    }\n  };\n  return (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {\n    children: [(0, _jsxRuntime.jsx)(_reactNativeGiftedChat.GiftedChat, {\n      messages: messages,\n      onSend: function onSend(messages) {\n        return _onSend(messages);\n      },\n      user: {\n        _id: _firebase.auth == null ? void 0 : (_auth$currentUser = _firebase.auth.currentUser) == null ? void 0 : _auth$currentUser.email,\n        name: _firebase.auth == null ? void 0 : (_auth$currentUser2 = _firebase.auth.currentUser) == null ? void 0 : _auth$currentUser2.email\n      },\n      renderUsernameOnMessage: true,\n      renderSend: renderSend,\n      onPress: function onPress(_, message) {\n        return setReplyMessage(message.text);\n      },\n      renderAccessory: renderAccessory,\n      renderCustomView: renderReplyMessageView,\n      isTyping: typing,\n      onInputTextChanged: notifyTyping\n    }), (0, _jsxRuntime.jsx)(_Button.default, {\n      title: \"\",\n      onPress: function onPress() {\n        setTyping(!typing);\n      },\n      children: \" \"\n    })]\n  });\n}\nvar styles = _StyleSheet.default.create({\n  inputContainer: {\n    position: 'relative',\n    flexDirection: 'column-reverse'\n  },\n  replyBarContainer: {\n    height: 'auto'\n  },\n  messagesContainer: {\n    flex: 1\n  },\n  replyMessageContainer: {\n    padding: 8,\n    paddingBottom: 0\n  },\n  replyMessageDivider: {\n    borderBottomWidth: 1,\n    borderBottomColor: 'lightgrey',\n    paddingTop: 6\n  },\n  bigText: {\n    fontSize: 100,\n    fontFamily: \"Futara\",\n    fontWeight: \"bold\"\n  },\n  smallBigText: {\n    fontSize: 40,\n    fontFamily: \"Futara\"\n  },\n  contactListContainer: {\n    position: 'absolute',\n    bottom: 0,\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    backgroundColor: 'red',\n    width: 200\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: \"purple\"\n  },\n  title: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: \"orange\"\n  },\n  input: {\n    backgroundColor: \"red\",\n    height: 58,\n    marginBottom: 20,\n    fontSize: 16,\n    borderRadius: 10,\n    padding: 12\n  },\n  form: {\n    flex: 1,\n    justifyContent: 'center',\n    marginHorizontal: 30\n  },\n  card: {\n    backgroundColor: \"blue\",\n    height: 58,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  buttonText: {\n    fontWeight: \"bold\",\n    color: \"black\",\n    fontSize: 18\n  },\n  button: {\n    backgroundColor: \"blue\",\n    height: 58,\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  item: {\n    backgroundColor: '#f9c2ff',\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  }\n});","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_StyleSheet","_interopRequireDefault","_Text","_View","_Button","_TouchableOpacity","_reactNativeGiftedChat","_firebase","_native","_reactNativeElements","_firestore","_ReplyMessageBar","_jsxRuntime","_jsxFileName","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","Chat","_ref","_route$params","_this","_auth$currentUser","_auth$currentUser2","navigation","route","useRoute","_useState","useState","_useState2","_slicedToArray2","messages","setMessages","_useState3","_useState4","replyMessage","setReplyMessage","_useState5","_useState6","showEmojiPicker","setShowEmojiPicker","_useState7","_useState8","ityping","setItyping","_useState9","_useState10","typing","setTyping","clearReplyMessage","cid","params","typerRef","doc","database","renderReplyMessageView","props","currentMessage","jsxs","style","styles","replyMessageContainer","children","jsx","replyMessageDivider","renderAccessory","message","text","clearReply","useLayoutEffect","collectionRef","collection","quer","query","orderBy","unsubscribe","onSnapshot","snapshot","console","log","docs","map","_id","id","createdAt","data","toDate","user","useEffect","setDoc","typers","onSend","useCallback","arguments","length","undefined","previousMessages","GiftedChat","append","_messages$","addDoc","renderSend","flexDirection","Send","assign","sendContainer","Icon","type","name","size","color","onPress","value","notifyTyping","args","updateDoc","increment","Fragment","auth","currentUser","email","renderUsernameOnMessage","_","renderCustomView","isTyping","onInputTextChanged","title","StyleSheet","create","inputContainer","position","replyBarContainer","height","messagesContainer","flex","padding","paddingBottom","borderBottomWidth","borderBottomColor","paddingTop","bigText","fontSize","fontFamily","fontWeight","smallBigText","contactListContainer","bottom","justifyContent","backgroundColor","width","container","alignItems","input","marginBottom","borderRadius","form","marginHorizontal","card","marginTop","buttonText","button","item","marginVertical"],"sources":["/home/joshua/sana-app/sana/screens/Chat.js"],"sourcesContent":["import React, {useState, useLayoutEffect, useCallback} from \"react\";\nimport {StyleSheet, Text, View, Button, TouchableOpacity} from \"react-native\";\nimport { GiftedChat, Send } from \"react-native-gifted-chat\";\nimport {auth, database} from '../config/firebase';\nimport {useRoute } from \"@react-navigation/native\";\nimport { Icon } from 'react-native-elements';\nimport {collection, setDoc, addDoc, doc, updateDoc, orderBy, query, onSnapshot, increment} from 'firebase/firestore';\n\nimport ReplyMessageBar from '../components/ReplyMessageBar';\n\nexport default function Chat({navigation}) {\n\n    const route = useRoute()\n    const [messages, setMessages] = useState([]);\n    const [replyMessage, setReplyMessage] = useState([]);\n    const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n    const [ityping, setItyping] = useState(false);\n    const [typing, setTyping] = useState(false);\n    const clearReplyMessage = () => setReplyMessage(null);\n    const cid = route.params?.cid;\n    \n    const typerRef = doc(database, \"chat\", cid);\n    \n    \n\n    const renderReplyMessageView = (props) => {\n        if (typeof props.currentMessage.replyMessage == 'string'){\n          return (\n              <View style={styles.replyMessageContainer}>\n                <Text>{props.currentMessage.replyMessage}</Text>\n                <View style={styles.replyMessageDivider} />\n              </View>\n            );\n        }\n    }\n\n    const renderAccessory = () => (\n        <ReplyMessageBar message = {{text:replyMessage}} clearReply={clearReplyMessage}/>\n    );\n\n    useLayoutEffect(() => {\n        const collectionRef = collection(database, \"chat\", cid, \"chat\");\n        const quer = query(collectionRef, orderBy('createdAt', 'desc'));\n            \n        const unsubscribe = onSnapshot(quer, snapshot => {\n        console.log('snapshot');\n        setMessages(\n            snapshot.docs.map(doc => ({\n                _id: doc.id,\n                createdAt: doc.data().createdAt.toDate(),\n                text: doc.data().text,\n                user: doc.data().user,\n                replyMessage: doc.data().replyMessage,\n            }))\n        )\n        });\n\n        return () => unsubscribe();\n    }, []);\n    \n    useEffect(() => {\n        setDoc(typerRef, {typers: 0}); \n        console.log(\"laskjdf\");\n\n        const unsubscribe = onSnapshot(typerRef, doc => {\n            setTyping(doc.data().typers - (ityping ? 1 : 0) > 0);\n            console.log(doc.data().typers + \" \" + ityping);\n        });\n        \n        return () => unsubscribe();\n    }, []);\n    \n    const onSend = useCallback((messages= []) => {\n      if (replyMessage){\n        messages[0].replyMessage = replyMessage;\n      }\n        setMessages(previousMessages => GiftedChat.append(previousMessages, messages));\n        const {_id, createdAt, text, user} = messages[0];\n\n        addDoc(collection(database, 'chat', cid, \"chat\"), {\n            _id, createdAt, text, user, replyMessage\n        });\n        console.log(messages)\n    });\n\n    const renderSend = (props) => {\n      return (\n            <View style={{flexDirection: 'row'}}>\n                <Send {...props}>\n                <View style={styles.sendContainer}>\n                  <Icon\n                    type=\"font-awesome\"\n                    name=\"send\"\n                    size={28}\n                    color='orange'\n                  />\n                </View>\n                </Send>\n\n                <TouchableOpacity onPress={() => setShowEmojiPicker((value) => value)}>\n                    <Icon\n                      type=\"font-awesome\"\n                      name=\"smile-o\"\n                      size={28}\n                      color='gray'/>\n                </TouchableOpacity>\n            </View>\n        );\n    }; \n\n    const onPress = () => {\n        \n    }\n        \n    const notifyTyping = args => {\n        if (!ityping && args != \"\") {\n            setItyping(true); \n            updateDoc(typerRef, {\n                typers: increment(1), \n            });\n        } else if (ityping && args == \"\") {\n            setItyping(false);\n            updateDoc(typerRef, {\n                typers: increment(-1),\n            });\n        }\n    }\n\n    return (\n        <>\n        <GiftedChat\n            messages={messages}\n            onSend={messages => onSend(messages)}\n            user={{\n                _id: auth?.currentUser?.email,\n                name:auth?.currentUser?.email,\n            }}\n            renderUsernameOnMessage={true}\n            renderSend={renderSend}\n            onPress = {(_, message) => setReplyMessage(message.text)}\n            renderAccessory = {renderAccessory}\n            renderCustomView={renderReplyMessageView}\n            isTyping={typing}\n            onInputTextChanged={notifyTyping}\n        />\n        <Button title=\"\" onPress={() => {setTyping(!typing)}}> </Button>\n        </>\n        \n    )\n        }\n\nconst styles = StyleSheet.create({\n    \n  inputContainer: {\n    position: 'relative',\n    flexDirection: 'column-reverse',\n  },\n  replyBarContainer: {\n    height: 'auto',\n  },\n  messagesContainer: {\n    flex: 1,\n  },\n  replyMessageContainer: {\n    padding: 8,\n    paddingBottom: 0,\n  },\n  replyMessageDivider: {\n    borderBottomWidth: 1,\n    borderBottomColor: 'lightgrey',\n    paddingTop: 6,\n  },\n    bigText:{\n        fontSize: 100,\n        fontFamily: \"Futara\",\n        fontWeight: \"bold\",\n    },\n    smallBigText:{\n        fontSize: 40,\n        fontFamily: \"Futara\",\n    },\n    contactListContainer:{\n        position: 'absolute',\n        bottom: 0,\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        backgroundColor:'red',\n        width: 200 // add width \n    },\n    container: {\n        flex:1,\n        alignItems: 'center', \n        justifyContent: 'center',\n        backgroundColor: \"purple\"\n    },\n    title: {\n        fontSize:36,\n        fontWeight: 'bold',\n        color: \"orange\",\n    },\n    input: {\n        backgroundColor: \"red\",\n        height: 58,\n        marginBottom: 20,\n        fontSize: 16,\n        borderRadius: 10,\n        padding: 12,\n    },\n    form: {\n        flex:1,\n        justifyContent: 'center',\n        marginHorizontal: 30,\n    },\n    card: {\n        backgroundColor: \"blue\",\n        height: 58,\n        borderRadius: 10,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 40,\n    },\n    buttonText: {\n        fontWeight: \"bold\",\n        color: \"black\",\n        fontSize: 18,\n    },\n    button: {\n        backgroundColor: \"blue\",\n        height: 58,\n        borderRadius: 10,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 40,\n    },\n  item: {\n    backgroundColor: '#f9c2ff',\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n});\n\n/*\n\n        <TouchableOpacity onPress={() => setShowEmojiPicker((value) => !value)}>\n          <Icon\n          type=\"font-awesome\"\n          name=\"smile-o\"\n          size={28}\n          color='gray'/>\n          </TouchableOpacity>\n          */\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}