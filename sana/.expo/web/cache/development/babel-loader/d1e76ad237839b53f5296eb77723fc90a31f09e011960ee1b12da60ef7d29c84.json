{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Tooltip = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _TouchableOpacity = _interopRequireDefault(require(\"react-native-web/dist/exports/TouchableOpacity\"));\nvar _Modal = _interopRequireDefault(require(\"react-native-web/dist/exports/Modal\"));\nvar _View = _interopRequireDefault(require(\"react-native-web/dist/exports/View\"));\nvar _StatusBar = _interopRequireDefault(require(\"react-native-web/dist/exports/StatusBar\"));\nvar _I18nManager = _interopRequireDefault(require(\"react-native-web/dist/exports/I18nManager\"));\nvar _StyleSheet = _interopRequireDefault(require(\"react-native-web/dist/exports/StyleSheet\"));\nvar _Platform = _interopRequireDefault(require(\"react-native-web/dist/exports/Platform\"));\nvar _config = require(\"../config\");\nvar _helpers = require(\"../helpers\");\nvar _Triangle = _interopRequireDefault(require(\"./Triangle\"));\nvar _getTooltipCoordinate2 = _interopRequireWildcard(require(\"./getTooltipCoordinate\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"/home/joshua/sana-app/sana/node_modules/react-native-elements/dist/tooltip/Tooltip.js\";\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar defaultProps = {\n  withOverlay: true,\n  overlayColor: 'rgba(250, 250, 250, 0.70)',\n  highlightColor: 'transparent',\n  withPointer: true,\n  toggleOnPress: true,\n  toggleAction: 'onPress',\n  height: 40,\n  width: 150,\n  containerStyle: {},\n  backgroundColor: '#617080',\n  onClose: function onClose() {},\n  onOpen: function onOpen() {},\n  skipAndroidStatusBar: false,\n  ModalComponent: _Modal.default,\n  closeOnlyOnBackdropPress: false\n};\nvar Tooltip = exports.Tooltip = function (_React$Component) {\n  (0, _inherits2.default)(Tooltip, _React$Component);\n  var _super = _createSuper(Tooltip);\n  function Tooltip() {\n    var _this;\n    (0, _classCallCheck2.default)(this, Tooltip);\n    _this = _super.apply(this, arguments);\n    _this._isMounted = false;\n    _this.state = {\n      isVisible: false,\n      yOffset: 0,\n      xOffset: 0,\n      elementWidth: 0,\n      elementHeight: 0\n    };\n    _this.toggleTooltip = function () {\n      var onClose = _this.props.onClose;\n      _this.getElementPosition();\n      _this._isMounted && _this.setState(function (prevState) {\n        if (prevState.isVisible) {\n          onClose && onClose();\n        }\n        return {\n          isVisible: !prevState.isVisible\n        };\n      });\n    };\n    _this.wrapWithPress = function (toggleOnPress, toggleAction, children) {\n      if (toggleOnPress) {\n        return (0, _jsxRuntime.jsx)(_TouchableOpacity.default, Object.assign({}, (0, _defineProperty2.default)({}, toggleAction, _this.toggleTooltip), {\n          delayLongPress: 250,\n          activeOpacity: 1,\n          children: children\n        }));\n      }\n      return children;\n    };\n    _this.containerStyle = function (withOverlay, overlayColor) {\n      return {\n        backgroundColor: withOverlay ? overlayColor : 'transparent',\n        flex: 1\n      };\n    };\n    _this.getTooltipStyle = function () {\n      var _ref2;\n      var _this$state = _this.state,\n        yOffset = _this$state.yOffset,\n        xOffset = _this$state.xOffset,\n        elementHeight = _this$state.elementHeight,\n        elementWidth = _this$state.elementWidth;\n      var _this$props = _this.props,\n        height = _this$props.height,\n        backgroundColor = _this$props.backgroundColor,\n        width = _this$props.width,\n        withPointer = _this$props.withPointer,\n        containerStyle = _this$props.containerStyle;\n      var _getTooltipCoordinate = (0, _getTooltipCoordinate2.default)(xOffset, yOffset, elementWidth, elementHeight, _helpers.ScreenWidth, _helpers.ScreenHeight, width, height, withPointer),\n        x = _getTooltipCoordinate.x,\n        y = _getTooltipCoordinate.y;\n      return _StyleSheet.default.flatten([(_ref2 = {\n        position: 'absolute'\n      }, (0, _defineProperty2.default)(_ref2, _I18nManager.default.isRTL ? 'right' : 'left', x), (0, _defineProperty2.default)(_ref2, \"top\", y), (0, _defineProperty2.default)(_ref2, \"width\", width), (0, _defineProperty2.default)(_ref2, \"height\", height), (0, _defineProperty2.default)(_ref2, \"backgroundColor\", backgroundColor), (0, _defineProperty2.default)(_ref2, \"display\", 'flex'), (0, _defineProperty2.default)(_ref2, \"alignItems\", 'center'), (0, _defineProperty2.default)(_ref2, \"justifyContent\", 'center'), (0, _defineProperty2.default)(_ref2, \"flex\", 1), (0, _defineProperty2.default)(_ref2, \"borderRadius\", 10), (0, _defineProperty2.default)(_ref2, \"padding\", 10), _ref2), containerStyle]);\n    };\n    _this.renderPointer = function (tooltipY) {\n      var _this$state2 = _this.state,\n        yOffset = _this$state2.yOffset,\n        xOffset = _this$state2.xOffset,\n        elementHeight = _this$state2.elementHeight,\n        elementWidth = _this$state2.elementWidth;\n      var _this$props2 = _this.props,\n        backgroundColor = _this$props2.backgroundColor,\n        pointerColor = _this$props2.pointerColor;\n      var pastMiddleLine = yOffset > (tooltipY || 0);\n      return (0, _jsxRuntime.jsx)(_View.default, {\n        style: (0, _defineProperty2.default)({\n          position: 'absolute',\n          top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2\n        }, _I18nManager.default.isRTL ? 'right' : 'left', xOffset + (0, _getTooltipCoordinate2.getElementVisibleWidth)(elementWidth, xOffset, _helpers.ScreenWidth) / 2 - 7.5),\n        children: (0, _jsxRuntime.jsx)(_Triangle.default, {\n          style: {\n            borderBottomColor: pointerColor || backgroundColor\n          },\n          isDown: pastMiddleLine\n        })\n      });\n    };\n    _this.getTooltipHighlightedButtonStyle = function () {\n      var _ref4;\n      var highlightColor = _this.props.highlightColor;\n      var _this$state3 = _this.state,\n        yOffset = _this$state3.yOffset,\n        xOffset = _this$state3.xOffset,\n        elementWidth = _this$state3.elementWidth,\n        elementHeight = _this$state3.elementHeight;\n      return _ref4 = {\n        position: 'absolute',\n        top: yOffset\n      }, (0, _defineProperty2.default)(_ref4, _I18nManager.default.isRTL ? 'right' : 'left', xOffset), (0, _defineProperty2.default)(_ref4, \"backgroundColor\", highlightColor), (0, _defineProperty2.default)(_ref4, \"overflow\", 'visible'), (0, _defineProperty2.default)(_ref4, \"width\", elementWidth), (0, _defineProperty2.default)(_ref4, \"height\", elementHeight), _ref4;\n    };\n    _this.renderTouchableHighlightedButton = function () {\n      var TooltipHighlightedButtonStyle = _this.getTooltipHighlightedButtonStyle();\n      return (0, _jsxRuntime.jsx)(_TouchableOpacity.default, {\n        testID: \"tooltipTouchableHighlightedButton\",\n        onPress: function onPress() {\n          return _this.toggleTooltip();\n        },\n        style: TooltipHighlightedButtonStyle,\n        children: _this.props.children\n      });\n    };\n    _this.renderStaticHighlightedButton = function () {\n      var TooltipHighlightedButtonStyle = _this.getTooltipHighlightedButtonStyle();\n      return (0, _jsxRuntime.jsx)(_View.default, {\n        style: TooltipHighlightedButtonStyle,\n        children: _this.props.children\n      });\n    };\n    _this.renderHighlightedButton = function () {\n      var closeOnlyOnBackdropPress = _this.props.closeOnlyOnBackdropPress;\n      if (closeOnlyOnBackdropPress) {\n        return _this.renderTouchableHighlightedButton();\n      } else {\n        return _this.renderStaticHighlightedButton();\n      }\n    };\n    _this.renderContent = function (withTooltip) {\n      var _this$props3 = _this.props,\n        popover = _this$props3.popover,\n        withPointer = _this$props3.withPointer,\n        toggleOnPress = _this$props3.toggleOnPress,\n        toggleAction = _this$props3.toggleAction;\n      if (!withTooltip) {\n        return _this.wrapWithPress(toggleOnPress, toggleAction, _this.props.children);\n      }\n      var tooltipStyle = _this.getTooltipStyle();\n      return (0, _jsxRuntime.jsxs)(_View.default, {\n        children: [_this.renderHighlightedButton(), withPointer && _this.renderPointer(tooltipStyle.top), (0, _jsxRuntime.jsx)(_View.default, {\n          style: tooltipStyle,\n          testID: \"tooltipPopoverContainer\",\n          children: popover\n        })]\n      });\n    };\n    _this.getElementPosition = function () {\n      var skipAndroidStatusBar = _this.props.skipAndroidStatusBar;\n      _this.renderedElement && _this.renderedElement.measure(function (_frameOffsetX, _frameOffsetY, width, height, pageOffsetX, pageOffsetY) {\n        _this._isMounted && _this.setState({\n          xOffset: pageOffsetX,\n          yOffset: _helpers.isIOS || skipAndroidStatusBar ? pageOffsetY : pageOffsetY - _Platform.default.select({\n            android: _StatusBar.default.currentHeight,\n            ios: 20,\n            default: 0\n          }),\n          elementWidth: width,\n          elementHeight: height\n        });\n      });\n    };\n    _this.renderStaticModalContent = function () {\n      var _this$props4 = _this.props,\n        withOverlay = _this$props4.withOverlay,\n        overlayColor = _this$props4.overlayColor;\n      return (0, _jsxRuntime.jsxs)(_react.Fragment, {\n        children: [(0, _jsxRuntime.jsx)(_TouchableOpacity.default, {\n          style: _this.containerStyle(withOverlay, overlayColor),\n          onPress: _this.toggleTooltip,\n          activeOpacity: 1\n        }), (0, _jsxRuntime.jsx)(_View.default, {\n          children: _this.renderContent(true)\n        })]\n      });\n    };\n    _this.renderTogglingModalContent = function () {\n      var _this$props5 = _this.props,\n        withOverlay = _this$props5.withOverlay,\n        overlayColor = _this$props5.overlayColor;\n      return (0, _jsxRuntime.jsx)(_TouchableOpacity.default, {\n        style: _this.containerStyle(withOverlay, overlayColor),\n        onPress: _this.toggleTooltip,\n        activeOpacity: 1,\n        children: _this.renderContent(true)\n      });\n    };\n    _this.renderModalContent = function () {\n      var closeOnlyOnBackdropPress = _this.props.closeOnlyOnBackdropPress;\n      if (closeOnlyOnBackdropPress) {\n        return _this.renderStaticModalContent();\n      } else {\n        return _this.renderTogglingModalContent();\n      }\n    };\n    return _this;\n  }\n  (0, _createClass2.default)(Tooltip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      requestAnimationFrame(this.getElementPosition);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var isVisible = this.state.isVisible;\n      var _this$props6 = this.props,\n        onOpen = _this$props6.onOpen,\n        ModalComponent = _this$props6.ModalComponent;\n      return (0, _jsxRuntime.jsxs)(_View.default, {\n        collapsable: false,\n        ref: function ref(e) {\n          _this2.renderedElement = e;\n        },\n        children: [this.renderContent(false), (0, _jsxRuntime.jsx)(ModalComponent, {\n          animationType: \"fade\",\n          visible: isVisible,\n          transparent: true,\n          onShow: onOpen,\n          children: this.renderModalContent()\n        })]\n      });\n    }\n  }]);\n  return Tooltip;\n}(_react.default.Component);\nTooltip.defaultProps = defaultProps;\nvar _default = exports.default = (0, _config.withTheme)(Tooltip, 'Tooltip');","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_TouchableOpacity","_interopRequireDefault","_Modal","_View","_StatusBar","_I18nManager","_StyleSheet","_Platform","_config","_helpers","_Triangle","_getTooltipCoordinate2","_jsxRuntime","_jsxFileName","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","defaultProps","withOverlay","overlayColor","highlightColor","withPointer","toggleOnPress","toggleAction","height","width","containerStyle","backgroundColor","onClose","onOpen","skipAndroidStatusBar","ModalComponent","Modal","closeOnlyOnBackdropPress","Tooltip","exports","_React$Component","_inherits2","_super","_this","_classCallCheck2","_isMounted","state","isVisible","yOffset","xOffset","elementWidth","elementHeight","toggleTooltip","props","getElementPosition","setState","prevState","wrapWithPress","children","jsx","assign","_defineProperty2","delayLongPress","activeOpacity","flex","getTooltipStyle","_ref2","_this$state","_this$props","_getTooltipCoordinate","getTooltipCoordinate","ScreenWidth","ScreenHeight","x","y","StyleSheet","flatten","position","I18nManager","isRTL","renderPointer","tooltipY","_this$state2","_this$props2","pointerColor","pastMiddleLine","style","top","getElementVisibleWidth","borderBottomColor","isDown","getTooltipHighlightedButtonStyle","_ref4","_this$state3","renderTouchableHighlightedButton","TooltipHighlightedButtonStyle","testID","onPress","renderStaticHighlightedButton","renderHighlightedButton","renderContent","withTooltip","_this$props3","popover","tooltipStyle","jsxs","renderedElement","measure","_frameOffsetX","_frameOffsetY","pageOffsetX","pageOffsetY","isIOS","Platform","select","android","StatusBar","currentHeight","ios","renderStaticModalContent","_this$props4","Fragment","renderTogglingModalContent","_this$props5","renderModalContent","_createClass2","key","value","componentDidMount","requestAnimationFrame","componentWillUnmount","render","_this2","_this$props6","collapsable","ref","animationType","visible","transparent","onShow","React","Component","_default","withTheme"],"sources":["/home/joshua/sana-app/sana/node_modules/react-native-elements/dist/tooltip/Tooltip.js"],"sourcesContent":["import React, { Fragment } from 'react';\nimport { TouchableOpacity, Modal, View, StatusBar, I18nManager, StyleSheet, Platform, } from 'react-native';\nimport { withTheme } from '../config';\nimport { ScreenWidth, ScreenHeight, isIOS } from '../helpers';\nimport Triangle from './Triangle';\nimport getTooltipCoordinate, { getElementVisibleWidth, } from './getTooltipCoordinate';\nconst defaultProps = {\n    withOverlay: true,\n    overlayColor: 'rgba(250, 250, 250, 0.70)',\n    highlightColor: 'transparent',\n    withPointer: true,\n    toggleOnPress: true,\n    toggleAction: 'onPress',\n    height: 40,\n    width: 150,\n    containerStyle: {},\n    backgroundColor: '#617080',\n    onClose: () => { },\n    onOpen: () => { },\n    skipAndroidStatusBar: false,\n    ModalComponent: Modal,\n    closeOnlyOnBackdropPress: false,\n};\nclass Tooltip extends React.Component {\n    constructor() {\n        super(...arguments);\n        this._isMounted = false;\n        this.state = {\n            isVisible: false,\n            yOffset: 0,\n            xOffset: 0,\n            elementWidth: 0,\n            elementHeight: 0,\n        };\n        this.toggleTooltip = () => {\n            const { onClose } = this.props;\n            this.getElementPosition();\n            this._isMounted &&\n                this.setState((prevState) => {\n                    if (prevState.isVisible) {\n                        onClose && onClose();\n                    }\n                    return { isVisible: !prevState.isVisible };\n                });\n        };\n        this.wrapWithPress = (toggleOnPress, toggleAction, children) => {\n            if (toggleOnPress) {\n                return (<TouchableOpacity {...{ [toggleAction]: this.toggleTooltip }} delayLongPress={250} activeOpacity={1}>\n          {children}\n        </TouchableOpacity>);\n            }\n            return children;\n        };\n        this.containerStyle = (withOverlay, overlayColor) => {\n            return {\n                backgroundColor: withOverlay ? overlayColor : 'transparent',\n                flex: 1,\n            };\n        };\n        this.getTooltipStyle = () => {\n            const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n            const { height, backgroundColor, width, withPointer, containerStyle, } = this.props;\n            const { x, y } = getTooltipCoordinate(xOffset, yOffset, elementWidth, elementHeight, ScreenWidth, ScreenHeight, width, height, withPointer);\n            return StyleSheet.flatten([\n                {\n                    position: 'absolute',\n                    [I18nManager.isRTL ? 'right' : 'left']: x,\n                    top: y,\n                    width,\n                    height,\n                    backgroundColor,\n                    // default styles\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    flex: 1,\n                    borderRadius: 10,\n                    padding: 10,\n                },\n                containerStyle,\n            ]);\n        };\n        this.renderPointer = (tooltipY) => {\n            const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n            const { backgroundColor, pointerColor } = this.props;\n            const pastMiddleLine = yOffset > (tooltipY || 0);\n            return (<View style={{\n                    position: 'absolute',\n                    top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2,\n                    [I18nManager.isRTL ? 'right' : 'left']: xOffset +\n                        getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) / 2 -\n                        7.5,\n                }}>\n        <Triangle style={{ borderBottomColor: pointerColor || backgroundColor }} isDown={pastMiddleLine}/>\n      </View>);\n        };\n        this.getTooltipHighlightedButtonStyle = () => {\n            const { highlightColor } = this.props;\n            const { yOffset, xOffset, elementWidth, elementHeight } = this.state;\n            return {\n                position: 'absolute',\n                top: yOffset,\n                [I18nManager.isRTL ? 'right' : 'left']: xOffset,\n                backgroundColor: highlightColor,\n                overflow: 'visible',\n                width: elementWidth,\n                height: elementHeight,\n            };\n        };\n        this.renderTouchableHighlightedButton = () => {\n            const TooltipHighlightedButtonStyle = this.getTooltipHighlightedButtonStyle();\n            return (<TouchableOpacity testID=\"tooltipTouchableHighlightedButton\" onPress={() => this.toggleTooltip()} style={TooltipHighlightedButtonStyle}>\n        {this.props.children}\n      </TouchableOpacity>);\n        };\n        this.renderStaticHighlightedButton = () => {\n            const TooltipHighlightedButtonStyle = this.getTooltipHighlightedButtonStyle();\n            return (<View style={TooltipHighlightedButtonStyle}>{this.props.children}</View>);\n        };\n        this.renderHighlightedButton = () => {\n            const { closeOnlyOnBackdropPress } = this.props;\n            if (closeOnlyOnBackdropPress) {\n                return this.renderTouchableHighlightedButton();\n            }\n            else {\n                return this.renderStaticHighlightedButton();\n            }\n        };\n        this.renderContent = (withTooltip) => {\n            const { popover, withPointer, toggleOnPress, toggleAction } = this.props;\n            if (!withTooltip) {\n                return this.wrapWithPress(toggleOnPress, toggleAction, this.props.children);\n            }\n            const tooltipStyle = this.getTooltipStyle();\n            return (<View>\n        {this.renderHighlightedButton()}\n        {withPointer && this.renderPointer(tooltipStyle.top)}\n        <View style={tooltipStyle} testID=\"tooltipPopoverContainer\">\n          {popover}\n        </View>\n      </View>);\n        };\n        this.getElementPosition = () => {\n            const { skipAndroidStatusBar } = this.props;\n            this.renderedElement &&\n                this.renderedElement.measure((_frameOffsetX, _frameOffsetY, width, height, pageOffsetX, pageOffsetY) => {\n                    this._isMounted &&\n                        this.setState({\n                            xOffset: pageOffsetX,\n                            yOffset: isIOS || skipAndroidStatusBar\n                                ? pageOffsetY\n                                : pageOffsetY -\n                                    Platform.select({\n                                        android: StatusBar.currentHeight,\n                                        ios: 20,\n                                        default: 0,\n                                    }),\n                            elementWidth: width,\n                            elementHeight: height,\n                        });\n                });\n        };\n        this.renderStaticModalContent = () => {\n            const { withOverlay, overlayColor } = this.props;\n            return (<Fragment>\n        <TouchableOpacity style={this.containerStyle(withOverlay, overlayColor)} onPress={this.toggleTooltip} activeOpacity={1}/>\n        <View>{this.renderContent(true)}</View>\n      </Fragment>);\n        };\n        this.renderTogglingModalContent = () => {\n            const { withOverlay, overlayColor } = this.props;\n            return (<TouchableOpacity style={this.containerStyle(withOverlay, overlayColor)} onPress={this.toggleTooltip} activeOpacity={1}>\n        {this.renderContent(true)}\n      </TouchableOpacity>);\n        };\n        this.renderModalContent = () => {\n            const { closeOnlyOnBackdropPress } = this.props;\n            if (closeOnlyOnBackdropPress) {\n                return this.renderStaticModalContent();\n            }\n            else {\n                return this.renderTogglingModalContent();\n            }\n        };\n    }\n    componentDidMount() {\n        this._isMounted = true;\n        // wait to compute onLayout values.\n        requestAnimationFrame(this.getElementPosition);\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    render() {\n        const { isVisible } = this.state;\n        const { onOpen, ModalComponent } = this.props;\n        return (<View collapsable={false} ref={(e) => {\n                this.renderedElement = e;\n            }}>\n        {this.renderContent(false)}\n        <ModalComponent animationType=\"fade\" visible={isVisible} transparent onShow={onOpen}>\n          {this.renderModalContent()}\n        </ModalComponent>\n      </View>);\n    }\n}\nTooltip.defaultProps = defaultProps;\nexport { Tooltip };\nexport default withTheme(Tooltip, 'Tooltip');\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AAAwC,IAAAC,iBAAA,GAAAC,sBAAA,CAAAF,OAAA;AAAA,IAAAG,MAAA,GAAAD,sBAAA,CAAAF,OAAA;AAAA,IAAAI,KAAA,GAAAF,sBAAA,CAAAF,OAAA;AAAA,IAAAK,UAAA,GAAAH,sBAAA,CAAAF,OAAA;AAAA,IAAAM,YAAA,GAAAJ,sBAAA,CAAAF,OAAA;AAAA,IAAAO,WAAA,GAAAL,sBAAA,CAAAF,OAAA;AAAA,IAAAQ,SAAA,GAAAN,sBAAA,CAAAF,OAAA;AAExC,IAAAS,OAAA,GAAAT,OAAA;AACA,IAAAU,QAAA,GAAAV,OAAA;AACA,IAAAW,SAAA,GAAAT,sBAAA,CAAAF,OAAA;AACA,IAAAY,sBAAA,GAAAb,uBAAA,CAAAC,OAAA;AAAuF,IAAAa,WAAA,GAAAb,OAAA;AAAA,IAAAc,YAAA;AAAA,SAAAC,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAjB,wBAAAiB,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAK,OAAA,EAAAL,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,OAAAQ,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,IAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,EAAAc,CAAA,SAAAI,CAAA,GAAAR,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA,UAAAI,CAAA,KAAAA,CAAA,CAAAX,GAAA,IAAAW,CAAA,CAAAC,GAAA,IAAAR,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAI,CAAA,IAAAV,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA,YAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAgB,GAAA,CAAAnB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAAA,SAAAY,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,OAAAC,gBAAA,CAAArB,OAAA,EAAAgB,OAAA,GAAAM,MAAA,MAAAL,yBAAA,QAAAM,SAAA,OAAAF,gBAAA,CAAArB,OAAA,QAAAwB,WAAA,EAAAF,MAAA,GAAAG,OAAA,CAAAC,SAAA,CAAAN,KAAA,EAAAO,SAAA,EAAAJ,SAAA,YAAAD,MAAA,GAAAF,KAAA,CAAAQ,KAAA,OAAAD,SAAA,gBAAAE,2BAAA,CAAA7B,OAAA,QAAAsB,MAAA;AAAA,SAAAJ,0BAAA,eAAAO,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAI,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAtB,SAAA,CAAAuB,OAAA,CAAArB,IAAA,CAAAa,OAAA,CAAAC,SAAA,CAAAM,OAAA,8CAAArC,CAAA;AACvF,IAAMuC,YAAY,GAAG;EACjBC,WAAW,EAAE,IAAI;EACjBC,YAAY,EAAE,2BAA2B;EACzCC,cAAc,EAAE,aAAa;EAC7BC,WAAW,EAAE,IAAI;EACjBC,aAAa,EAAE,IAAI;EACnBC,YAAY,EAAE,SAAS;EACvBC,MAAM,EAAE,EAAE;EACVC,KAAK,EAAE,GAAG;EACVC,cAAc,EAAE,CAAC,CAAC;EAClBC,eAAe,EAAE,SAAS;EAC1BC,OAAO,EAAE,SAAAA,QAAA,EAAM,CAAE,CAAC;EAClBC,MAAM,EAAE,SAAAA,OAAA,EAAM,CAAE,CAAC;EACjBC,oBAAoB,EAAE,KAAK;EAC3BC,cAAc,EAAEC,cAAK;EACrBC,wBAAwB,EAAE;AAC9B,CAAC;AAAC,IACIC,OAAO,GAAAC,OAAA,CAAAD,OAAA,aAAAE,gBAAA;EAAA,IAAAC,UAAA,CAAAtD,OAAA,EAAAmD,OAAA,EAAAE,gBAAA;EAAA,IAAAE,MAAA,GAAAxC,YAAA,CAAAoC,OAAA;EACT,SAAAA,QAAA,EAAc;IAAA,IAAAK,KAAA;IAAA,IAAAC,gBAAA,CAAAzD,OAAA,QAAAmD,OAAA;IACVK,KAAA,GAAAD,MAAA,CAAA3B,KAAA,OAASD,SAAS;IAClB6B,KAAA,CAAKE,UAAU,GAAG,KAAK;IACvBF,KAAA,CAAKG,KAAK,GAAG;MACTC,SAAS,EAAE,KAAK;MAChBC,OAAO,EAAE,CAAC;MACVC,OAAO,EAAE,CAAC;MACVC,YAAY,EAAE,CAAC;MACfC,aAAa,EAAE;IACnB,CAAC;IACDR,KAAA,CAAKS,aAAa,GAAG,YAAM;MACvB,IAAQpB,OAAO,GAAKW,KAAA,CAAKU,KAAK,CAAtBrB,OAAO;MACfW,KAAA,CAAKW,kBAAkB,CAAC,CAAC;MACzBX,KAAA,CAAKE,UAAU,IACXF,KAAA,CAAKY,QAAQ,CAAC,UAACC,SAAS,EAAK;QACzB,IAAIA,SAAS,CAACT,SAAS,EAAE;UACrBf,OAAO,IAAIA,OAAO,CAAC,CAAC;QACxB;QACA,OAAO;UAAEe,SAAS,EAAE,CAACS,SAAS,CAACT;QAAU,CAAC;MAC9C,CAAC,CAAC;IACV,CAAC;IACDJ,KAAA,CAAKc,aAAa,GAAG,UAAC/B,aAAa,EAAEC,YAAY,EAAE+B,QAAQ,EAAK;MAC5D,IAAIhC,aAAa,EAAE;QACf,OAAQ,IAAA/C,WAAA,CAAAgF,GAAA,EAAC5F,iBAAA,CAAAoB,OAAgB,EAAAM,MAAA,CAAAmE,MAAA,SAAAC,gBAAA,CAAA1E,OAAA,MAAQwC,YAAY,EAAGgB,KAAA,CAAKS,aAAa;UAAIU,cAAc,EAAE,GAAI;UAACC,aAAa,EAAE,CAAE;UAAAL,QAAA,EACjHA;QAAQ,EACO,CAAC;MACf;MACA,OAAOA,QAAQ;IACnB,CAAC;IACDf,KAAA,CAAKb,cAAc,GAAG,UAACR,WAAW,EAAEC,YAAY,EAAK;MACjD,OAAO;QACHQ,eAAe,EAAET,WAAW,GAAGC,YAAY,GAAG,aAAa;QAC3DyC,IAAI,EAAE;MACV,CAAC;IACL,CAAC;IACDrB,KAAA,CAAKsB,eAAe,GAAG,YAAM;MAAA,IAAAC,KAAA;MACzB,IAAAC,WAAA,GAA0DxB,KAAA,CAAKG,KAAK;QAA5DE,OAAO,GAAAmB,WAAA,CAAPnB,OAAO;QAAEC,OAAO,GAAAkB,WAAA,CAAPlB,OAAO;QAAEE,aAAa,GAAAgB,WAAA,CAAbhB,aAAa;QAAED,YAAY,GAAAiB,WAAA,CAAZjB,YAAY;MACrD,IAAAkB,WAAA,GAAyEzB,KAAA,CAAKU,KAAK;QAA3EzB,MAAM,GAAAwC,WAAA,CAANxC,MAAM;QAAEG,eAAe,GAAAqC,WAAA,CAAfrC,eAAe;QAAEF,KAAK,GAAAuC,WAAA,CAALvC,KAAK;QAAEJ,WAAW,GAAA2C,WAAA,CAAX3C,WAAW;QAAEK,cAAc,GAAAsC,WAAA,CAAdtC,cAAc;MACnE,IAAAuC,qBAAA,GAAiB,IAAAC,8BAAoB,EAACrB,OAAO,EAAED,OAAO,EAAEE,YAAY,EAAEC,aAAa,EAAEoB,oBAAW,EAAEC,qBAAY,EAAE3C,KAAK,EAAED,MAAM,EAAEH,WAAW,CAAC;QAAnIgD,CAAC,GAAAJ,qBAAA,CAADI,CAAC;QAAEC,CAAC,GAAAL,qBAAA,CAADK,CAAC;MACZ,OAAOC,mBAAU,CAACC,OAAO,CAAC,EAAAV,KAAA;QAElBW,QAAQ,EAAE;MAAU,OAAAhB,gBAAA,CAAA1E,OAAA,EAAA+E,KAAA,EACnBY,oBAAW,CAACC,KAAK,GAAG,OAAO,GAAG,MAAM,EAAGN,CAAC,OAAAZ,gBAAA,CAAA1E,OAAA,EAAA+E,KAAA,SACpCQ,CAAC,OAAAb,gBAAA,CAAA1E,OAAA,EAAA+E,KAAA,WACNrC,KAAK,OAAAgC,gBAAA,CAAA1E,OAAA,EAAA+E,KAAA,YACLtC,MAAM,OAAAiC,gBAAA,CAAA1E,OAAA,EAAA+E,KAAA,qBACNnC,eAAe,OAAA8B,gBAAA,CAAA1E,OAAA,EAAA+E,KAAA,aAEN,MAAM,OAAAL,gBAAA,CAAA1E,OAAA,EAAA+E,KAAA,gBACH,QAAQ,OAAAL,gBAAA,CAAA1E,OAAA,EAAA+E,KAAA,oBACJ,QAAQ,OAAAL,gBAAA,CAAA1E,OAAA,EAAA+E,KAAA,UAClB,CAAC,OAAAL,gBAAA,CAAA1E,OAAA,EAAA+E,KAAA,kBACO,EAAE,OAAAL,gBAAA,CAAA1E,OAAA,EAAA+E,KAAA,aACP,EAAE,GAAAA,KAAA,GAEfpC,cAAc,CACjB,CAAC;IACN,CAAC;IACDa,KAAA,CAAKqC,aAAa,GAAG,UAACC,QAAQ,EAAK;MAC/B,IAAAC,YAAA,GAA0DvC,KAAA,CAAKG,KAAK;QAA5DE,OAAO,GAAAkC,YAAA,CAAPlC,OAAO;QAAEC,OAAO,GAAAiC,YAAA,CAAPjC,OAAO;QAAEE,aAAa,GAAA+B,YAAA,CAAb/B,aAAa;QAAED,YAAY,GAAAgC,YAAA,CAAZhC,YAAY;MACrD,IAAAiC,YAAA,GAA0CxC,KAAA,CAAKU,KAAK;QAA5CtB,eAAe,GAAAoD,YAAA,CAAfpD,eAAe;QAAEqD,YAAY,GAAAD,YAAA,CAAZC,YAAY;MACrC,IAAMC,cAAc,GAAGrC,OAAO,IAAIiC,QAAQ,IAAI,CAAC,CAAC;MAChD,OAAQ,IAAAtG,WAAA,CAAAgF,GAAA,EAACzF,KAAA,CAAAiB,OAAI;QAACmG,KAAK,MAAAzB,gBAAA,CAAA1E,OAAA;UACX0F,QAAQ,EAAE,UAAU;UACpBU,GAAG,EAAEF,cAAc,GAAGrC,OAAO,GAAG,EAAE,GAAGA,OAAO,GAAGG,aAAa,GAAG;QAAC,GAC/D2B,oBAAW,CAACC,KAAK,GAAG,OAAO,GAAG,MAAM,EAAG9B,OAAO,GAC3C,IAAAuC,6CAAsB,EAACtC,YAAY,EAAED,OAAO,EAAEsB,oBAAW,CAAC,GAAG,CAAC,GAC9D,GAAG,CACT;QAAAb,QAAA,EACV,IAAA/E,WAAA,CAAAgF,GAAA,EAAClF,SAAA,CAAAU,OAAQ;UAACmG,KAAK,EAAE;YAAEG,iBAAiB,EAAEL,YAAY,IAAIrD;UAAgB,CAAE;UAAC2D,MAAM,EAAEL;QAAe,CAAC;MAAC,CAC9F,CAAC;IACL,CAAC;IACD1C,KAAA,CAAKgD,gCAAgC,GAAG,YAAM;MAAA,IAAAC,KAAA;MAC1C,IAAQpE,cAAc,GAAKmB,KAAA,CAAKU,KAAK,CAA7B7B,cAAc;MACtB,IAAAqE,YAAA,GAA0DlD,KAAA,CAAKG,KAAK;QAA5DE,OAAO,GAAA6C,YAAA,CAAP7C,OAAO;QAAEC,OAAO,GAAA4C,YAAA,CAAP5C,OAAO;QAAEC,YAAY,GAAA2C,YAAA,CAAZ3C,YAAY;QAAEC,aAAa,GAAA0C,YAAA,CAAb1C,aAAa;MACrD,OAAAyC,KAAA;QACIf,QAAQ,EAAE,UAAU;QACpBU,GAAG,EAAEvC;MAAO,OAAAa,gBAAA,CAAA1E,OAAA,EAAAyG,KAAA,EACXd,oBAAW,CAACC,KAAK,GAAG,OAAO,GAAG,MAAM,EAAG9B,OAAO,OAAAY,gBAAA,CAAA1E,OAAA,EAAAyG,KAAA,qBAC9BpE,cAAc,OAAAqC,gBAAA,CAAA1E,OAAA,EAAAyG,KAAA,cACrB,SAAS,OAAA/B,gBAAA,CAAA1E,OAAA,EAAAyG,KAAA,WACZ1C,YAAY,OAAAW,gBAAA,CAAA1E,OAAA,EAAAyG,KAAA,YACXzC,aAAa,GAAAyC,KAAA;IAE7B,CAAC;IACDjD,KAAA,CAAKmD,gCAAgC,GAAG,YAAM;MAC1C,IAAMC,6BAA6B,GAAGpD,KAAA,CAAKgD,gCAAgC,CAAC,CAAC;MAC7E,OAAQ,IAAAhH,WAAA,CAAAgF,GAAA,EAAC5F,iBAAA,CAAAoB,OAAgB;QAAC6G,MAAM,EAAC,mCAAmC;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMtD,KAAA,CAAKS,aAAa,CAAC,CAAC;QAAA,CAAC;QAACkC,KAAK,EAAES,6BAA8B;QAAArC,QAAA,EAClJf,KAAA,CAAKU,KAAK,CAACK;MAAQ,CACJ,CAAC;IACjB,CAAC;IACDf,KAAA,CAAKuD,6BAA6B,GAAG,YAAM;MACvC,IAAMH,6BAA6B,GAAGpD,KAAA,CAAKgD,gCAAgC,CAAC,CAAC;MAC7E,OAAQ,IAAAhH,WAAA,CAAAgF,GAAA,EAACzF,KAAA,CAAAiB,OAAI;QAACmG,KAAK,EAAES,6BAA8B;QAAArC,QAAA,EAAEf,KAAA,CAAKU,KAAK,CAACK;MAAQ,CAAO,CAAC;IACpF,CAAC;IACDf,KAAA,CAAKwD,uBAAuB,GAAG,YAAM;MACjC,IAAQ9D,wBAAwB,GAAKM,KAAA,CAAKU,KAAK,CAAvChB,wBAAwB;MAChC,IAAIA,wBAAwB,EAAE;QAC1B,OAAOM,KAAA,CAAKmD,gCAAgC,CAAC,CAAC;MAClD,CAAC,MACI;QACD,OAAOnD,KAAA,CAAKuD,6BAA6B,CAAC,CAAC;MAC/C;IACJ,CAAC;IACDvD,KAAA,CAAKyD,aAAa,GAAG,UAACC,WAAW,EAAK;MAClC,IAAAC,YAAA,GAA8D3D,KAAA,CAAKU,KAAK;QAAhEkD,OAAO,GAAAD,YAAA,CAAPC,OAAO;QAAE9E,WAAW,GAAA6E,YAAA,CAAX7E,WAAW;QAAEC,aAAa,GAAA4E,YAAA,CAAb5E,aAAa;QAAEC,YAAY,GAAA2E,YAAA,CAAZ3E,YAAY;MACzD,IAAI,CAAC0E,WAAW,EAAE;QACd,OAAO1D,KAAA,CAAKc,aAAa,CAAC/B,aAAa,EAAEC,YAAY,EAAEgB,KAAA,CAAKU,KAAK,CAACK,QAAQ,CAAC;MAC/E;MACA,IAAM8C,YAAY,GAAG7D,KAAA,CAAKsB,eAAe,CAAC,CAAC;MAC3C,OAAQ,IAAAtF,WAAA,CAAA8H,IAAA,EAACvI,KAAA,CAAAiB,OAAI;QAAAuE,QAAA,GAChBf,KAAA,CAAKwD,uBAAuB,CAAC,CAAC,EAC9B1E,WAAW,IAAIkB,KAAA,CAAKqC,aAAa,CAACwB,YAAY,CAACjB,GAAG,CAAC,EACpD,IAAA5G,WAAA,CAAAgF,GAAA,EAACzF,KAAA,CAAAiB,OAAI;UAACmG,KAAK,EAAEkB,YAAa;UAACR,MAAM,EAAC,yBAAyB;UAAAtC,QAAA,EACxD6C;QAAO,CACJ,CAAC;MAAA,CACH,CAAC;IACL,CAAC;IACD5D,KAAA,CAAKW,kBAAkB,GAAG,YAAM;MAC5B,IAAQpB,oBAAoB,GAAKS,KAAA,CAAKU,KAAK,CAAnCnB,oBAAoB;MAC5BS,KAAA,CAAK+D,eAAe,IAChB/D,KAAA,CAAK+D,eAAe,CAACC,OAAO,CAAC,UAACC,aAAa,EAAEC,aAAa,EAAEhF,KAAK,EAAED,MAAM,EAAEkF,WAAW,EAAEC,WAAW,EAAK;QACpGpE,KAAA,CAAKE,UAAU,IACXF,KAAA,CAAKY,QAAQ,CAAC;UACVN,OAAO,EAAE6D,WAAW;UACpB9D,OAAO,EAAEgE,cAAK,IAAI9E,oBAAoB,GAChC6E,WAAW,GACXA,WAAW,GACTE,iBAAQ,CAACC,MAAM,CAAC;YACZC,OAAO,EAAEC,kBAAS,CAACC,aAAa;YAChCC,GAAG,EAAE,EAAE;YACPnI,OAAO,EAAE;UACb,CAAC,CAAC;UACV+D,YAAY,EAAErB,KAAK;UACnBsB,aAAa,EAAEvB;QACnB,CAAC,CAAC;MACV,CAAC,CAAC;IACV,CAAC;IACDe,KAAA,CAAK4E,wBAAwB,GAAG,YAAM;MAClC,IAAAC,YAAA,GAAsC7E,KAAA,CAAKU,KAAK;QAAxC/B,WAAW,GAAAkG,YAAA,CAAXlG,WAAW;QAAEC,YAAY,GAAAiG,YAAA,CAAZjG,YAAY;MACjC,OAAQ,IAAA5C,WAAA,CAAA8H,IAAA,EAAC7I,MAAA,CAAA6J,QAAQ;QAAA/D,QAAA,GACrB,IAAA/E,WAAA,CAAAgF,GAAA,EAAC5F,iBAAA,CAAAoB,OAAgB;UAACmG,KAAK,EAAE3C,KAAA,CAAKb,cAAc,CAACR,WAAW,EAAEC,YAAY,CAAE;UAAC0E,OAAO,EAAEtD,KAAA,CAAKS,aAAc;UAACW,aAAa,EAAE;QAAE,CAAC,CAAC,EACzH,IAAApF,WAAA,CAAAgF,GAAA,EAACzF,KAAA,CAAAiB,OAAI;UAAAuE,QAAA,EAAEf,KAAA,CAAKyD,aAAa,CAAC,IAAI;QAAC,CAAO,CAAC;MAAA,CAC/B,CAAC;IACT,CAAC;IACDzD,KAAA,CAAK+E,0BAA0B,GAAG,YAAM;MACpC,IAAAC,YAAA,GAAsChF,KAAA,CAAKU,KAAK;QAAxC/B,WAAW,GAAAqG,YAAA,CAAXrG,WAAW;QAAEC,YAAY,GAAAoG,YAAA,CAAZpG,YAAY;MACjC,OAAQ,IAAA5C,WAAA,CAAAgF,GAAA,EAAC5F,iBAAA,CAAAoB,OAAgB;QAACmG,KAAK,EAAE3C,KAAA,CAAKb,cAAc,CAACR,WAAW,EAAEC,YAAY,CAAE;QAAC0E,OAAO,EAAEtD,KAAA,CAAKS,aAAc;QAACW,aAAa,EAAE,CAAE;QAAAL,QAAA,EAClIf,KAAA,CAAKyD,aAAa,CAAC,IAAI;MAAC,CACT,CAAC;IACjB,CAAC;IACDzD,KAAA,CAAKiF,kBAAkB,GAAG,YAAM;MAC5B,IAAQvF,wBAAwB,GAAKM,KAAA,CAAKU,KAAK,CAAvChB,wBAAwB;MAChC,IAAIA,wBAAwB,EAAE;QAC1B,OAAOM,KAAA,CAAK4E,wBAAwB,CAAC,CAAC;MAC1C,CAAC,MACI;QACD,OAAO5E,KAAA,CAAK+E,0BAA0B,CAAC,CAAC;MAC5C;IACJ,CAAC;IAAC,OAAA/E,KAAA;EACN;EAAC,IAAAkF,aAAA,CAAA1I,OAAA,EAAAmD,OAAA;IAAAwF,GAAA;IAAAC,KAAA,EACD,SAAAC,kBAAA,EAAoB;MAChB,IAAI,CAACnF,UAAU,GAAG,IAAI;MAEtBoF,qBAAqB,CAAC,IAAI,CAAC3E,kBAAkB,CAAC;IAClD;EAAC;IAAAwE,GAAA;IAAAC,KAAA,EACD,SAAAG,qBAAA,EAAuB;MACnB,IAAI,CAACrF,UAAU,GAAG,KAAK;IAC3B;EAAC;IAAAiF,GAAA;IAAAC,KAAA,EACD,SAAAI,OAAA,EAAS;MAAA,IAAAC,MAAA;MACL,IAAQrF,SAAS,GAAK,IAAI,CAACD,KAAK,CAAxBC,SAAS;MACjB,IAAAsF,YAAA,GAAmC,IAAI,CAAChF,KAAK;QAArCpB,MAAM,GAAAoG,YAAA,CAANpG,MAAM;QAAEE,cAAc,GAAAkG,YAAA,CAAdlG,cAAc;MAC9B,OAAQ,IAAAxD,WAAA,CAAA8H,IAAA,EAACvI,KAAA,CAAAiB,OAAI;QAACmJ,WAAW,EAAE,KAAM;QAACC,GAAG,EAAE,SAAAA,IAACzJ,CAAC,EAAK;UACtCsJ,MAAI,CAAC1B,eAAe,GAAG5H,CAAC;QAC5B,CAAE;QAAA4E,QAAA,GACL,IAAI,CAAC0C,aAAa,CAAC,KAAK,CAAC,EAC1B,IAAAzH,WAAA,CAAAgF,GAAA,EAACxB,cAAc;UAACqG,aAAa,EAAC,MAAM;UAACC,OAAO,EAAE1F,SAAU;UAAC2F,WAAW;UAACC,MAAM,EAAE1G,MAAO;UAAAyB,QAAA,EACjF,IAAI,CAACkE,kBAAkB,CAAC;QAAC,CACZ,CAAC;MAAA,CACb,CAAC;IACT;EAAC;EAAA,OAAAtF,OAAA;AAAA,EArLiBsG,cAAK,CAACC,SAAS;AAuLrCvG,OAAO,CAACjB,YAAY,GAAGA,YAAY;AAAC,IAAAyH,QAAA,GAAAvG,OAAA,CAAApD,OAAA,GAErB,IAAA4J,iBAAS,EAACzG,OAAO,EAAE,SAAS,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}